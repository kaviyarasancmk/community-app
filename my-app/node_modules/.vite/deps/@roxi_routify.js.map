{
  "version": 3,
  "sources": ["../../@roxi/routify/lib/runtime/Route/utils.js", "../../@roxi/routify/lib/runtime/Route/RouteFragment.js", "../../@roxi/routify/lib/runtime/Route/Route.js", "../../consolite/esm/index.mjs", "../../@roxi/routify/lib/runtime/utils/logger.js", "../../@roxi/routify/lib/runtime/Global/BrowserAdapter.js", "../../@roxi/routify/lib/runtime/Global/Global.js", "../../@roxi/routify/lib/runtime/utils/index.js", "../../@roxi/routify/lib/runtime/Router/urlReflectors/ReflectorBase.js", "../../@roxi/routify/lib/common/RNode.js", "../../@roxi/routify/lib/runtime/Instance/Node.svelte", "../../@roxi/routify/lib/runtime/Instance/RNodeRuntime.js", "../../@roxi/routify/lib/runtime/Instance/UrlParamUtils.js", "../../@roxi/routify/lib/common/Routify.js", "../../@roxi/routify/lib/runtime/Instance/RoutifyRuntime.js", "../../hookar/esm/util.mjs", "../../hookar/esm/index.mjs", "../../@roxi/routify/lib/runtime/Router/urlReflectors/Address.js", "../../@roxi/routify/lib/runtime/Router/urlReflectors/Internal.js", "../../@roxi/routify/lib/runtime/plugins/reset/index.js", "../../@roxi/routify/lib/common/utils.js", "../../@roxi/routify/lib/runtime/Router/utils/index.js", "../../@roxi/routify/lib/runtime/Router/Router.js", "../../@roxi/routify/lib/runtime/renderer/DecoratorWrapper.svelte", "../../@roxi/routify/lib/runtime/decorators/Noop.svelte", "../../@roxi/routify/lib/runtime/decorators/AnchorDecorator.svelte", "../../@roxi/routify/lib/runtime/renderer/RenderFragment.svelte", "../../@roxi/routify/lib/runtime/renderer/utils/normalizeMulti.js", "../../@roxi/routify/lib/runtime/renderer/utils/normalizeDecorator.js", "../../@roxi/routify/lib/runtime/renderer/ComposeFragments.svelte", "../../@roxi/routify/lib/runtime/helpers/scroll.js", "../../@roxi/routify/lib/runtime/decorators/ScrollDecorator.svelte", "../../@roxi/routify/lib/runtime/Router/Router.svelte", "../../@roxi/routify/lib/runtime/Router/urlReflectors/LocalStorage.js", "../../@roxi/routify/lib/runtime/helpers/index.js", "../../@roxi/routify/lib/common/helpers.js", "../../@roxi/routify/lib/runtime/index.js"],
  "sourcesContent": ["export const spreadsLast = node => (node.name.match(/\\[\\.\\.\\.(.+)\\]/) ? 1 : -1)\n\n/**\n *\n * @param {RouteFragment[]} routeFragments\n * @returns {RNodeRuntime}\n */\nexport const getNearestAncestorNodeWithSpreadParam = routeFragments => {\n    for (const fragment of [...routeFragments].reverse()) {\n        for (const node of fragment.node.parent?.children || []) {\n            const match = node.name.match(/\\[\\.\\.\\.(.+)\\]/)\n            if (match) return node\n        }\n    }\n}\n\nexport const getUrlFragments = url =>\n    url\n        .replace(/[?#].+/, '') // strip the search and hash query\n        .replace(/\\/$/, '') // strip trailing slash\n        .split('/')\n        .slice(1) // skip the first fragment since it will always be empty\n\nexport const indexOfNode = (fragments, node) =>\n    fragments.findIndex(fragment => fragment.node === node)\n\n/**\n * @template {string|string[]} T\n * @param {T} strOrArr\n * @returns {T}\n */\nconst uriDecodeStringOrArray = strOrArr =>\n    strOrArr instanceof Array\n        ? /** @type {T} */ (strOrArr.map(decodeURI))\n        : /** @type {T} */ (decodeURI(strOrArr))\n\nexport const URIDecodeObject = obj =>\n    Object.entries(obj).reduce(\n        (_return, [key, value]) => ({\n            ..._return,\n            [key]: uriDecodeStringOrArray(value),\n        }),\n        {},\n    )\n", "import { writable } from 'svelte/store'\nimport { URIDecodeObject } from './utils.js'\n\nexport class RouteFragment {\n    /**\n     * @param {Route} route the route this fragment belongs to\n     * @param {RNodeRuntime} node the node that corresponds to the fragment\n     * @param {String=} urlFragment a fragment of the url (fragments = url.split('/'))\n     * @param {Object<string, any>=} params\n     */\n    constructor(route, node, urlFragment = '', params = {}) {\n        this.route = route\n        this.node = node\n        /** @type {Partial<RoutifyLoadReturn>} */\n        this.load = undefined\n        this.urlFragment = urlFragment\n        this.params = params\n        /** @type {import('svelte/store').Writable<RenderContext>} */\n        this.renderContext = writable()\n        Object.defineProperty(this, 'route', { enumerable: false })\n    }\n\n    /**\n     * @type {Object.<string, string|string[]>}\n     **/\n    _params = {}\n\n    get index() {\n        return this.route.fragments.indexOf(this)\n    }\n\n    get params() {\n        return URIDecodeObject(this._params)\n    }\n\n    set params(params) {\n        this._params = params\n    }\n}\n", "import { RouteFragment } from './RouteFragment.js'\n\n/** @type {UrlState[]} */\nconst URL_STATES = ['pushState', 'replaceState', 'popState']\n\nexport class Route {\n    /** @type {RouteFragment[]} */\n    allFragments = []\n    /** @type {RouteFragment[]} only fragments with components */\n    get fragments() {\n        return this.router.transformFragments.run(this.allFragments)\n    }\n\n    /** @type {Promise<{route: Route}>} */\n    loaded\n\n    /** @type {RoutifyLoadReturn} */\n    load = {\n        status: 200,\n        error: null,\n        maxage: null,\n        props: {},\n        redirect: null,\n    }\n\n    /**\n     * @param {Router} router\n     * @param {string} url\n     * @param {UrlState} mode\n     * @param {Object} state a state to attach to the route\n     */\n    constructor(router, url, mode, state = {}) {\n        const [, hash] = url.match(/#(.+)/) || []\n\n        this.router = router\n        this.url = url\n        this.mode = mode\n        this.state = state\n        this.hash = hash\n        this.state.createdAt = new Date()\n\n        if (!router.rootNode) {\n            this.router.log.error(\"Can't navigate without a rootNode\")\n            const err = new Error(\"Can't navigate without a rootNode\")\n            Object.assign(err, { routify: { router } })\n            throw err\n        }\n\n        if (!URL_STATES.includes(mode))\n            throw new Error('url.mode must be pushState, replaceState or popState')\n\n        this.allFragments = this._createFragments()\n        this.log = router.log.createChild('[route]') // ROUTIFY-DEV-ONLY\n        this.log.debug('created', this) // ROUTIFY-DEV-ONLY\n    }\n\n    get params() {\n        const match = this.url.match(/\\?.+/)\n        const query = (match && match[0]) || ''\n\n        return Object.assign(\n            {},\n            ...this.allFragments.map(fragment => fragment.params),\n            this.router.queryHandler.parse(query, this),\n        )\n    }\n\n    get leaf() {\n        return [...this.allFragments].pop()\n    }\n\n    get isPending() {\n        return this === this.router.pendingRoute.get()\n    }\n\n    async loadRoute() {\n        const { router } = this\n        const pipeline = [\n            this.runBeforeUrlChangeHooks,\n            this.loadComponents,\n            this.runPreloads,\n        ]\n\n        this.loaded = new Promise(async (resolve, reject) => {\n            for (const pretask of pipeline) {\n                const passedPreTask = await pretask.bind(this)()\n                if (!router.pendingRoute.get()) {\n                    resolve({ route: router.activeRoute.get() })\n                    return\n                } else if (!this.isPending) {\n                    router.pendingRoute.get().loaded.then(resolve).catch(reject)\n                    return\n                } else if (!passedPreTask) {\n                    router.pendingRoute.set(null)\n                    return\n                }\n            }\n\n            // the route made it through all pretasks, lets set it to active\n            this.router.log.debug('set active route', this) // ROUTIFY-DEV-ONLY\n\n            const $activeRoute = this.router.activeRoute.get()\n            if ($activeRoute) router.history.push($activeRoute)\n\n            router.activeRoute.set(this)\n\n            router.afterUrlChange.run({\n                route: this,\n                history: [...router.history].reverse(),\n            })\n\n            this.router.log.debug('unset pending route', this) // ROUTIFY-DEV-ONLY\n            router.pendingRoute.set(null)\n            resolve({ route: this })\n        })\n        return this.loaded\n    }\n\n    /**\n     * converts async module functions to sync functions\n     */\n    async loadComponents() {\n        this.log.debug('load components', this) // ROUTIFY-DEV-ONLY\n        const nodes = this.fragments.map(fragment => fragment.node)\n        const multiNodes = nodes\n            .map(node => node.children.find(node => node.name === '_decorator'))\n            .filter(Boolean)\n\n        await Promise.all([...nodes, ...multiNodes].map(node => node.loadModule()))\n        return true\n    }\n\n    async runPreloads() {\n        this.log.debug('run preloads', this) // ROUTIFY-DEV-ONLY\n\n        const prevRoute = this.router.activeRoute.get()\n\n        for (const [index, fragment] of this.fragments.entries()) {\n            // if something happened and this route is no longer pending, abort\n            if (!this.isPending) return false\n\n            const prevFragmentInSpot = prevRoute?.fragments[index]\n            const isSameBranch = fragment.node === prevFragmentInSpot?.node\n\n            /** @type { RoutifyLoadContext } */\n            const ctx = {\n                route: this,\n                prevRoute,\n                isNew: !isSameBranch,\n            }\n\n            if (fragment.node.module?.load) {\n                fragment.load = {\n                    ...(isSameBranch && prevFragmentInSpot.load),\n                    ...(await fragment.node.module.load(ctx)),\n                }\n                Object.assign(this.load, fragment.load)\n\n                if (this.load.redirect)\n                    return this.router.url.replace(this.load.redirect, {\n                        redirectedBy: this,\n                    })\n            }\n        }\n\n        return this\n    }\n\n    async runBeforeUrlChangeHooks() {\n        return await this.router.beforeUrlChange.run({ route: this })\n    }\n\n    /**\n     * @param {RNodeRuntime} node the node that corresponds to the fragment\n     * @param {String=} urlFragment a fragment of the url (fragments = url.split('/'))\n     * @param {Object<string, any>=} params\n     */\n    createFragment(node, urlFragment = '', params = {}) {\n        return new RouteFragment(this, node, urlFragment, params)\n    }\n\n    /**\n     * creates fragments. A fragment is the section between each / in the URL\n     */\n    _createFragments() {\n        const url = this.url.replace(/[#?].+/, '')\n        const rootNode = this.router.rootNode\n        const nodeChain = this.router.rootNode.getChainTo(url, {\n            rootNode,\n            allowDynamic: true,\n            includeIndex: true,\n        })\n        const fragments = nodeChain.map(nc =>\n            this.createFragment(nc.node, nc.fragment, nc.params),\n        )\n        return fragments\n    }\n}\n", "/**\n * @callback Filter\n * @param {string[]} prefixes\n */\n\n/**\n * @typedef {Object} Logger\n * @prop {createLogger} create Creates new logger.\n * @prop {createLogger} createChild Creates a child logger. Prefix will be inherited. Level and levels will be inherited if undefined.\n * @prop {createLogger} createParent Creates a parent logger. Prefix will be inherited. Level and levels will be inherited if undefined.\n * @prop {Object.<string, number>} levels\n * @prop {number} level\n * @prop {Filter|string|RegExp} filter\n * @prop {Logger} root\n * @prop {Logger} parent\n */\n\nconst defaults = {\n  filter: '',\n  level: 3,\n  levels: {\n    default: 3,\n    error: 1,\n    warn: 2,\n    debug: 4,\n    trace: 4,\n  },\n}\n\nconst noop = x => x\nconst unique = (v, i, a) => a.indexOf(v) === i\n\n// $& means the whole matched string\nconst escapeRegExp = str => str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')\nconst escapeIfString = str => (typeof str === 'string' ? escapeRegExp(str) : str)\n\nexport class Consolite {\n  prefix = []\n  _filter = null\n  _level = null\n  _levels = {}\n  parent = null\n\n  constructor(...prefix) {\n    this.prefix.push(...prefix)\n\n    const withinLevel = prop => this.levels[prop] <= this.level\n    const passesFilter = () =>\n      typeof this.filter === 'function'\n        ? this.filter(prefix)\n        : prefix.join('').match(escapeIfString(this.filter))\n\n    this.register = (prop, fn) =>\n      Object.defineProperty(this, prop, {\n        get: () => {\n          const canBind = typeof fn === 'function'\n          const shouldPrint = withinLevel(prop) && passesFilter() && canBind\n          const prefixes = prefix.map(p => (typeof p === 'string' ? p : p(prop, this)))\n\n          return shouldPrint ? fn.bind(console, ...prefixes) : noop\n        },\n      })\n    \n    // attach console methods\n    Object.keys(console).forEach(prop => this.register(prop, console[prop]))\n  }\n\n  get level() {\n    return this._level ?? this.parent?.level ?? defaults.level\n  }\n  set level(val) {\n    this._level = val\n  }\n  get filter() {\n    return this._filter ?? this.parent?.filter ?? defaults.filter\n  }\n  set filter(val) {\n    this._filter = val\n  }\n  get root() {\n    return this.parent?.root || this\n  }\n\n  levels = new Proxy(this._levels, {\n    ownKeys: target =>\n      [\n        ...Object.keys(defaults.levels),\n        ...Object.keys(this.parent?.levels || {}),\n        ...Reflect.ownKeys(target),\n      ].filter(unique),\n    getOwnPropertyDescriptor: (target, key) => ({\n      value: target[key],\n      enumerable: true,\n      configurable: true,\n    }),\n    get: (target, prop) =>\n      target[prop] ||\n      target.default ||\n      this.parent?.levels[prop] ||\n      this.parent?.levels.default ||\n      defaults.levels[prop] ||\n      defaults.levels.default,\n    set: (target, prop, value) => (target[prop] = value),\n  })\n\n  createChild(...prefix) {\n    const child = createLogger(...this.prefix, ...prefix)\n    child.parent = this\n    return child\n  }\n\n  createParent(...prefix) {\n    return createLogger(...prefix, ...this.prefix)\n  }\n\n  create = createLogger\n}\n\n/**\n * @callback PrefixFn\n * @param {string} method console method, eg. log, debug etc...\n */\n\n/** @typedef {Consolite & Console} ConsoliteLogger */\n\n/**\n * @param {(string|PrefixFn)[]} prefix\n * @returns {ConsoliteLogger}\n */\nexport const createLogger = (...prefix) => Object.assign(new Consolite(...prefix))\n", "import { createLogger } from 'consolite'\nconst log = createLogger('[rf3]')\n\nexport const createRootLogger = () => {\n    Object.assign(log, loadState())\n    return new Proxy(log, {\n        get: (target, prop) => target[prop],\n        set: (target, prop, value) => {\n            target[prop] = value\n            saveState(log)\n            return false\n        },\n    })\n}\n\nexport const loadState = () => {\n    if (typeof window === 'undefined') {\n        const level = process.env.DEBUG_LEVEL\n        const filter = process.env.DEBUG_FILTER\n        return { level, filter }\n    } else {\n        return JSON.parse(localStorage.getItem('__routify.logState') || '{}')\n    }\n}\n\nexport const saveState = log => {\n    const { level, filter } = log\n    if (typeof window === 'undefined') {\n        process.env.DEBUG_LEVEL = level\n        process.env.DEBUG_FILTER = filter\n    } else localStorage.setItem('__routify.logState', JSON.stringify({ filter, level }))\n}\n\n/**\n * @template {function} T\n * @param {T} fn\n * @param {string} msg\n * @returns {T}\n */\nexport const debugWrapper =\n    (fn, msg) =>\n    /** @ts-ignore */\n    (...params) => {\n        const result = fn(...params)\n        log.debug(msg, { params, result })\n        return result\n    }\n", "/** @returns {BrowserAdapter} */\nexport const createBrowserAdapter = opts => {\n    const delimiter = opts?.delimiter || ';'\n\n    return {\n        // Called by each router when the browser URL changes. Returns an internal URL for each respective router.\n        toRouter: (url, router) => {\n            const formatRE = router.name ? `${router.name}=(.+?)` : `(.+?)`\n            const RE = new RegExp(`(^|${delimiter})${formatRE}(${delimiter}|$)`)\n\n            const matches = url.match(RE)\n            return matches ? matches[2] : '/'\n        },\n        // compiles all router URLS into a single URL for the browser.\n        toBrowser: routers =>\n            routers\n                .map(r => (r.name ? `${r.name}=` : '') + r.url.external())\n                .join(delimiter),\n    }\n}\n", "import { urlFromAddress } from '../utils/index.js'\nimport {\n    createRootLogger, // ROUTIFY-DEV-ONLY\n    debugWrapper, // ROUTIFY-DEV-ONLY\n} from '../utils/logger.js'\n\nimport { createBrowserAdapter } from './BrowserAdapter.js'\n\nexport class AppInstance {\n    /** @type {RoutifyRuntime[]} */\n    instances = []\n\n    constructor() {\n        globalThis['__routify'] = this\n\n        this.log = createRootLogger() // ROUTIFY-DEV-ONLY\n    }\n\n    /** @type {Router[]} */\n    get routers() {\n        return [].concat(...this.instances.map(instance => instance.routers))\n    }\n\n    browserAdapter = createBrowserAdapter()\n\n    /** @param {Router} router */\n    urlFromBrowser = router => {\n        // ROUTIFY-DEV-ONLY-START\n        if (debugWrapper)\n            return debugWrapper(\n                this.browserAdapter.toRouter,\n                'calling browserAdapter.toRouter',\n            )(urlFromAddress(), router)\n        // ROUTIFY-DEV-ONLY-END\n\n        return this.browserAdapter.toRouter(urlFromAddress(), router)\n    }\n\n    register(instance) {\n        this.instances.push(instance)\n        return this\n    }\n}\n\nexport const appInstance = new AppInstance()\n", "import { get, writable } from 'svelte/store'\nimport { getContext } from 'svelte'\nimport { RouteFragment } from '../Route/RouteFragment.js'\nimport { appInstance } from '../Global/Global.js'\nexport * from './logger.js' // ROUTIFY-DEV-ONLY\n\n// /**\n//  * writable with subscription hooks\n//  * @param {any} value\n//  */\n// export const writable2 = value => {\n//     let subscribers = []\n//     let { set, subscribe, update } = writable(value)\n\n//     const hooks = {\n//         onSub: () => {},\n//         onUnsub: () => {},\n//         onFirstSub: () => {},\n//         onLastUnsub: () => {},\n//     }\n\n//     const newSubscribe = (run, invalidator) => {\n//         // hooks\n//         hooks.onSub()\n//         if (!subscribers.length) hooks.onFirstSub()\n\n//         const unsub = subscribe(run, invalidator)\n//         subscribers.push(unsub)\n//         return () => {\n//             hooks.onUnsub()\n//             if (subscribers.length === 1) hooks.onLastUnsub()\n\n//             subscribers = subscribers.filter(_unsub => _unsub !== unsub)\n//             unsub()\n//         }\n//     }\n\n//     return {\n//         set,\n//         subscribe: newSubscribe,\n//         update,\n//         subscribers,\n//         hooks,\n//     }\n// }\n\nexport const isDescendantElem = parent => elem => {\n    while ((elem = elem.parentNode)) if (elem === parent) return true\n    return false\n}\n\nexport const getUrlFromClick = event => {\n    const el = event.target.closest('a')\n    const href = el && el.href\n\n    if (\n        event.ctrlKey ||\n        event.metaKey ||\n        event.altKey ||\n        event.shiftKey ||\n        event.button ||\n        (event.key && event.key !== 'Enter') ||\n        event.defaultPrevented\n    )\n        return\n    if (!href || el.target || el.host !== location.host) return\n\n    const url = new URL(href)\n    const relativeUrl = url.pathname + url.search + url.hash\n\n    event.preventDefault()\n    return relativeUrl\n}\n\n// TODO ADD TEST\n/**\n * Creates an url from a path and params objects\n * @example no wildcard\n * ```javascript\n * pathAndParamsToUrl('/foo/[slug]/[id]', {slug: 'hello'})\n * // /foo/hello/[id]\n * ```\n * @example wildcard\n * ```javascript\n * pathAndParamsToUrl('/foo/[slug]/[id]', {slug: 'hello'}, undefined, true)\n * // /foo/hello/.*?\n * ```\n * @param {string} path\n * @param {Object.<string|number,string|number>} params\n * @param {function} queryHandler\n * @param {boolean} useWildcards inserts wildcards for unmatched params\n * @returns {string}\n */\nexport const pathAndParamsToUrl = (path, params = {}, queryHandler, useWildcards) => {\n    Object.entries(params).forEach(([key, val]) => {\n        if (path.includes(`[${key}]`)) {\n            path = path.replace(`[${key}]`, val)\n            delete params[key]\n        }\n    })\n\n    if (useWildcards) path = insertWildcards(path)\n\n    return path + queryHandler(params)\n}\n\n/**\n * replaces /path/[foo]/bar with /path/.*?/bar\n * @param {string} str\n */\nexport const insertWildcards = str => {\n    return str.replace(/\\[.*?\\]/, '.*?')\n}\n\nexport const fromEntries = iterable => {\n    return [...iterable].reduce((obj, [key, val]) => {\n        obj[key] = val\n        return obj\n    }, {})\n}\n\n/**\n * replaces [] brackets in a string with actual params\n * @param {string} path\n * @param {Object.<string,(string|string[])>} params\n * @param {Route} route\n * @returns\n */\nexport const populateUrl = (path, params, route) => {\n    /** @type {Object.<string, string>} */\n    const overloads = {}\n    Object.entries(params).forEach(([param, value]) => {\n        const RE = new RegExp(`\\\\[(\\.\\.\\.)?${param}\\\\]|\\\\:${param}`)\n        value = Array.isArray(value) ? value.join('/') : value\n        if (path.match(RE)) path = path.replace(RE, encodeURI(value))\n        else overloads[param] = value\n    })\n    const query = route.router.queryHandler.stringify(overloads, route)\n\n    return path + query\n}\n\nexport const urlFromAddress = () =>\n    (({ pathname, search, hash }) => pathname + search + hash)(window.location)\n\nlet _globalAutoIncrementerCount = {}\nexport const autoIncrementer = (\n    storeObj = _globalAutoIncrementerCount,\n    name = '__NA',\n) => {\n    storeObj[name] = storeObj[name] || 0\n    storeObj[name]++\n    return storeObj[name]\n}\n\n/**\n * @template  T\n * @param {string} prop\n * @returns {function(T, number, T[]): boolean}\n */\nexport const distinctBy = prop => (obj, i, arr) =>\n    arr.findIndex(_obj => _obj[prop] === obj[prop]) === i\n\n/** @returns {RenderContext} */\nconst getGlobalContext = () => {\n    console.log('Using helpers outside router context is not supported. Use at own risk.')\n    const router = appInstance.routers[0]\n    const route = router.activeRoute.get() || router.pendingRoute.get()\n\n    return {\n        elem: null,\n        anchorLocation: null,\n        options: null,\n        childFragments: writable(route.allFragments),\n        node: router.rootNode,\n        fragment: route.allFragments[0],\n        isActive: writable(false),\n        isVisible: writable(false),\n        multi: null,\n        router,\n        route,\n        parentContext: null,\n        onDestroy: null,\n        decorators: [],\n        single: writable(true),\n        scrollBoundary: null,\n    }\n}\n\nexport const contexts = {\n    /** @type {Router} */\n    get router() {\n        return (getContext('routify-fragment-context') || getGlobalContext()).router\n    },\n    /** @type {RenderContext} */\n    get fragment() {\n        return getContext('routify-fragment-context') || getGlobalContext()\n    },\n}\n\n/**\n * gets context if available without throwing errors outside component initialization\n * @param {string} name\n * @returns\n */\nexport const getContextMaybe = name => {\n    try {\n        return getContext(name)\n    } catch (err) {}\n}\n\n/**\n * @template T\n * @typedef {import('svelte/store').Writable<T> & {get: ()=>T}} Getable\n */\n\n/**\n * like writable, but with an added get prop\n * @template T\n * @param  {T} value\n * @param  {import('svelte/store').StartStopNotifier<T>=} start\n * @returns {Getable<T>}\n */\nexport const getable = (value, start) => {\n    const store = writable(value, start)\n    return Object.assign(store, { get: () => get(store) })\n}\n\n/**\n * checks if all route.fragments and url are identical\n * @param  {...Route} routes\n * @returns\n */\nexport const identicalRoutes = (...routes) =>\n    routes\n        .map(route => JSON.stringify([route?.allFragments, route?.url]))\n        .reduce((prev, curr) => prev === curr && curr)\n\n/**\n * Shallow clones class instance.\n * Variadic parameters are assigned to clone.\n * @template T\n * @param {T} obj\n * @param  {...any} rest\n * @returns {T}\n */\nexport const clone = (obj, ...rest) =>\n    Object.assign(Object.create(Object.getPrototypeOf(obj)), obj, ...rest)\n\nexport const isAnonFn = input => typeof input === 'function' && !input.prototype\n\n/**\n * @template T\n * @param {T} input\n * @returns {T extends (...args: any[]) => any ? T : (...args: any[]) => T}\n */\nexport const resolveIfAnonFn =\n    input =>\n    // @ts-ignore\n    (...payload) =>\n        // @ts-ignore\n        isAnonFn(input) ? input(...payload) : input\n\n/**\n * Takes an array to clone and an A) item to push to the array or B an anonymous function where the first parameter is the cloned array\n * @example\n * ```javascript\n * const array = [1,2,3] *\n * pushToOrReplace(array, 'foo')                    // [1, 2, 3, 'foo']\n * pushToOrReplace(array, ()=>['foo'])              // ['foo']\n * pushToOrReplace(array, (arr)=>['foo', ...arr])   // ['foo', 1, 2, 3]\n * ```\n * @param {any[]} arr\n * @param {any} input anonymous functions will be treated as callbacks\n * @returns\n */\nexport const pushToOrReplace = (arr, input) => {\n    const _isAnonFn = isAnonFn(input)\n    input = _isAnonFn || Array.isArray(input) ? input : [input]\n\n    const res = _isAnonFn ? input([...arr]) : [...arr, ...input]\n    if (!Array.isArray(res)) throw new Error('anonymous callback did not return array')\n    return res\n}\n\n/**\n * @template T\n * @param {import('svelte/store').Writable<T>} store\n * @param {(T)=>boolean} cb\n * @returns {Promise<T>}\n */\nexport const waitFor = (store, cb) =>\n    new Promise((resolve, reject) => {\n        try {\n            const unsub = store.subscribe(val => {\n                if (cb(val)) {\n                    resolve(val)\n                    setTimeout(() => unsub)\n                }\n            })\n        } catch (err) {\n            reject(err)\n        }\n    })\n", "export class BaseReflector {\n    /** @param {Router} router */\n    constructor(router) {\n        this.router = router\n        this.log = this.router.log\n    }\n    install() {}\n    uninstall() {}\n    reflect() {}\n}\n", "/** @template {import('./Routify').Routify<any>} InstanceType */\nexport class RNode {\n    /** @type {InstanceType['NodeType']} */\n    parent\n\n    /** @type {Object.<string, any>} */\n    meta = {}\n\n    /** @type {String} */\n    id\n\n    /**\n     * @param {string} name\n     * @param {ReservedCmpProps|string} module\n     * @param {InstanceType} instance\n     */\n    constructor(name, module, instance) {\n        /** @type {InstanceType} */\n        this.instance = instance\n        this.name = name\n\n        instance.nodeIndex.push(this)\n        this.module = module\n        Object.defineProperty(this, 'instance', { enumerable: false })\n        Object.defineProperty(this, 'parent', { enumerable: false })\n    }\n\n    /** @param {InstanceType['NodeConstructor']['prototype']} child */\n    appendChild(child) {\n        if (child.instance) child.parent = this\n    }\n\n    /**\n     * Creates a new child node\n     * Same as `node.appendChild(instance.createNode('my-node'))`\n     * @param {string} name\n     */\n    createChild(name, module) {\n        const node = /** @type {InstanceType['NodeConstructor']['prototype']} */ (\n            this.instance.createNode(name, module)\n        )\n        this.appendChild(node)\n        return node\n    }\n\n    /** @type {InstanceType['NodeConstructor']['prototype'][]} */\n    get descendants() {\n        return this.instance.nodeIndex.filter(node =>\n            node.ancestors.find(n => n === this),\n        )\n    }\n\n    remove() {\n        const { nodeIndex } = this.instance\n        const index = nodeIndex.findIndex(node => node === this)\n        nodeIndex.splice(index, 1)\n    }\n\n    /** @type {InstanceType['NodeConstructor']['prototype'][]} */\n    get ancestors() {\n        let node = this\n        const ancestors = []\n        while ((node = node.parent)) ancestors.push(node)\n\n        return ancestors\n    }\n\n    /** @type {InstanceType['NodeConstructor']['prototype']} */\n    get root() {\n        let node = this\n        while (node.parent) node = node.parent\n        return node\n    }\n\n    get isRoot() {\n        return this === this.root\n    }\n\n    /** @type {InstanceType['NodeType'][]} */\n    get children() {\n        return this.instance.nodeIndex.filter(node => node.parent === this)\n    }\n\n    /** @returns {number} */\n    get level() {\n        return (this.parent?.level || 0) + 1\n    }\n\n    /** @type {Object.<string,RegExp>} */\n    _regex = {}\n\n    get regex() {\n        // match against name to make sure regex stays working if name is changed\n        const { name } = this\n        if (!this._regex[name])\n            this._regex[name] = this.instance.utils.getRegexFromName(this.name)\n        return this._regex[name]\n    }\n\n    // save to regex key so regex gets invalidated if name changes\n    set regex(value) {\n        this._regex[this.name] = new RegExp(value)\n    }\n\n    /**\n     * @type {Object.<string, string[]>}\n     * */\n    _paramKeys = {}\n\n    get paramKeys() {\n        // match against name to make sure regex stays working if name is changed\n        const { name } = this\n        if (!this._paramKeys[name])\n            this._paramKeys[name] = this.instance.utils.getFieldsFromName(this.name)\n        return this._paramKeys[name]\n    }\n\n    /**\n     * returns parameters for a given urlFragment\n     * @param {string} urlFragment\n     */\n    getParams(urlFragment) {\n        // if the path is '.' or '..' return nothing\n        if (urlFragment.match(/^\\.+$/)) return {}\n\n        const values = this.instance.utils.getValuesFromPath(this.regex, urlFragment)\n        return this.instance.utils.mapFieldsWithValues(this.paramKeys, values)\n    }\n\n    // todo traverse should use the getChainTo API interface\n\n    /**\n     * resolve a node relative to this node\n     * @param {string} path\n     * @param {boolean} allowDynamic allow traversing dynamic components (parameterized)\n     * @param {boolean} includeIndex\n     * @param {boolean} silent don't throw errors for 404s\n     * @returns {this}\n     */\n    traverse(path, allowDynamic = false, includeIndex = false, silent = false) {\n        const isNamed = !path.startsWith('/') && !path.startsWith('.')\n        return isNamed\n            ? this.root.instance.nodeIndex.find(node => node.meta.name === path)\n            : this.getChainTo(path, { allowDynamic, includeIndex, silent })?.pop().node\n    }\n\n    /**\n     * Returns an array of steps to reach a path. Each path contains a node and params\n     * @param {string} path\n     * @param {object} [options]\n     * @param {boolean} [options.allowDynamic=true]\n     * @param {boolean} [options.includeIndex=true]\n     * @param {boolean} [options.silent=false] don't throw errors for 404s\n     * @param {this} [options.rootNode]\n     \n     */\n    getChainTo(path, options) {\n        options = {\n            ...{ allowDynamic: true, includeIndex: true },\n            ...options,\n        }\n\n        /** @type {InstanceType['NodeConstructor']['prototype']} */\n        const originNode = path.startsWith('/') ? options.rootNode || this.root : this\n\n        /**\n         * The path from current node to the leaf page, eg. \"blog\", \"posts\", \"some-story\", \"comments\", \"123\"\n         * @type {string[]}\n         * */\n        const stepsToLeaf = path\n            .split('/')\n            .filter(snip => snip !== '.')\n            .filter(Boolean)\n\n        let currentNodeStep = {\n            node: originNode,\n            stepsToLeaf,\n            params: {},\n            fragment: '',\n        }\n        const nodeSteps = [currentNodeStep]\n\n        let inStaticDeadEnd = false // if true, don't look for a static component\n        let inDynamicDeadEnd = false // if true, don't look for a dynamic component\n\n        while (currentNodeStep.stepsToLeaf.length) {\n            const [nextStep, ...restSteps] = currentNodeStep.stepsToLeaf\n            // console.log(`in \"${nodeSteps.map(ns => ns.node.name).join('/')}\" looking for \"${nextStep}\"`)\n\n            const nextNode =\n                nextStep === '..'\n                    ? currentNodeStep.node.parent\n                    : (!inStaticDeadEnd &&\n                          currentNodeStep.node.children.find(\n                              node => node.name === nextStep,\n                          )) ||\n                      (options.allowDynamic &&\n                          !inDynamicDeadEnd &&\n                          currentNodeStep.node.children\n                              .filter(({ meta }) => meta.dynamic && !meta.dynamicSpread)\n                              .find(node => node.regex.test(nextStep))) ||\n                      (options.allowDynamic &&\n                          currentNodeStep.node.children.find(\n                              node => node.meta.dynamicSpread,\n                          ))\n\n            if (nextNode) {\n                // we found a node that matches the next url fragment\n                // console.log(nodeSteps.map(ns => ns.node.name).join('/') + '/' + nextNode.name)\n\n                const nodeStep = {\n                    node: nextNode,\n                    params: nextNode.meta.dynamicSpread\n                        ? [nextStep]\n                        : nextNode.meta.dynamic\n                        ? nextNode.getParams(nextStep)\n                        : {},\n                    stepsToLeaf: restSteps,\n                    fragment: nextStep,\n                }\n                currentNodeStep = nodeStep\n                nodeSteps.push(nodeStep)\n            } else if (!options.allowDynamic && options.silent) return null\n            else if (!options.allowDynamic && !options.silent)\n                throw new Error(\n                    `${nodeSteps\n                        .map(ns => ns.node.name || 'root')\n                        .join('/')} could not travel to ${nextStep}`,\n                )\n            else if (currentNodeStep.node.meta.dynamicSpread) {\n                // we didn't find a node matching the next step, but we're inside a dynamic spread parameter node, so we'll use that\n                currentNodeStep.params.push(nextStep)\n                currentNodeStep.fragment += `/${nextStep}`\n                currentNodeStep.stepsToLeaf.shift()\n                inDynamicDeadEnd = false\n                inStaticDeadEnd = false\n            } else {\n                // we didn't find a node and the current node doesn't have spread parameters. Let's backtrack.\n                // console.log(`backtracking from ${nodeSteps.map(ns => ns.node.name).join('/')}`)\n                nodeSteps.pop()\n                currentNodeStep = [...nodeSteps].pop()\n                inDynamicDeadEnd = inStaticDeadEnd\n                inStaticDeadEnd = true\n                if (!currentNodeStep && options.silent) return null\n                else if (!currentNodeStep && !options.silent)\n                    throw new Error(`Could not find path \"${path}\" from ${this.name}`)\n            }\n        }\n\n        // append an index component if one exists\n        try {\n            const indexNode =\n                options.includeIndex && currentNodeStep.node.traverse('./index')\n\n            if (indexNode)\n                nodeSteps.push({\n                    node: indexNode,\n                    stepsToLeaf: [],\n                    params: {},\n                    fragment: '',\n                })\n        } catch (err) {}\n\n        // normalize params so that spread parameters get a key\n        nodeSteps.forEach(ns => {\n            ns.params = Array.isArray(ns.params)\n                ? { [ns.node.name.replace(/\\[\\.\\.\\.(.+)\\]/, '$1')]: ns.params }\n                : ns.params\n        })\n\n        return nodeSteps\n    }\n\n    /** @returns {InstanceType['NodeConstructor']['prototype']} */\n    toJSON() {\n        return {\n            ...this,\n            children: [...this.children],\n        }\n    }\n\n    /** @returns {string} */\n    get path() {\n        return (\n            '/' +\n            [this, ...this.ancestors]\n                .reverse()\n                .map(node => node.name)\n                .filter(Boolean)\n                .join('/')\n        )\n    }\n}\n", null, "import { RNode } from '../../common/RNode.js'\nimport Node from './Node.svelte'\nimport { RoutifyRuntime } from './RoutifyRuntime.js'\n\n/**\n * @extends {RNode<RoutifyRuntime>}\n */\nexport class RNodeRuntime extends RNode {\n    /** @type {LoadSvelteModule} */\n    asyncModule\n\n    /**\n     * @param {string} name\n     * @param {ReservedCmpProps} module\n     * @param {RoutifyRuntime} instance\n     * @param {LoadSvelteModule=} asyncModule\n     */\n    constructor(name, module, instance, asyncModule) {\n        super(name, module, instance)\n\n        /** @type {ReservedCmpProps} */\n        this.module = module\n\n        /** @type {LoadSvelteModule} */\n        this.asyncModule = asyncModule\n    }\n\n    get children() {\n        return this.instance.nodeIndex\n            .filter(node => node.parent === this)\n            .sort((prev, curr) => (prev.meta.order || 0) - (curr.meta.order || 0))\n    }\n\n    get pages() {\n        return this.pagesWithIndex.filter(node => node.name !== 'index')\n    }\n\n    get pagesWithIndex() {\n        return this.children\n            .filter(node => !node.meta.fallback)\n            .filter(node => !node.name.startsWith('_'))\n            .filter(node => !node.name.includes('['))\n            .filter(node => !(node.meta?.order === false))\n    }\n\n    get hasComponent() {\n        return !!(this.module || this.asyncModule)\n    }\n\n    /** @ts-ignore SvelteComponentConstructor is only available in VSCode */\n    /** @returns {Promise<SvelteComponentDev>} */\n    async getRawComponent() {\n        const module = await this.loadModule()\n        return module?.default\n    }\n\n    async loadModule() {\n        if (!this.module && this.asyncModule) {\n            this.module = await this.asyncModule()\n        }\n        return this.module\n    }\n\n    /**\n     * Returns in a sync/async component in a synchronous wrapper\n     * @returns {() => Node}\n     **/\n    get component() {\n        const node = this\n\n        return function (options) {\n            options.props = {\n                ...options.props,\n                passthrough: options.props,\n                node,\n            }\n            return new Node({ ...options })\n        }\n    }\n\n    /**\n     * @param {object} snapshotRoot\n     */\n    importTree = snapshotRoot => {\n        const queue = [[this, snapshotRoot]]\n\n        while (queue.length) {\n            const [node, snapshot] = queue.pop()\n            const { children, ...nodeSnapshot } = snapshot\n            Object.assign(node, nodeSnapshot)\n\n            // queue children\n            for (const childSnapshot of children) {\n                const childNode = node.createChild(\n                    snapshot.name || snapshot.rootName || '',\n                )\n                queue.push([childNode, childSnapshot])\n            }\n        }\n        return this\n    }\n\n    get _fallback() {\n        return this.children.find(node => node.meta.fallback) || this.parent?._fallback\n    }\n}\n", "const defaultRe = /\\[(.+?)\\]/gm // matches [string]\nexport class UrlParamUtils {\n    constructor(RE = defaultRe) {\n        this.RE = RE\n    }\n\n    /**\n     * returns [\"slug\", \"id\"] from \"my[slug]and[id]\"\n     * @param {string} name\n     * @returns {string[]}\n     */\n    getFieldsFromName = name => [...name.matchAll(this.RE)].map(v => v[1])\n\n    /**\n     * converts \"my[slug]and[id]\" to /my(.+)and(.+)/gm\n     * @param {string} name\n     * @returns {RegExp}\n     */\n    getRegexFromName = name => new RegExp('^' + name.replace(this.RE, '(.+)') + '$')\n\n    /**\n     * returns an array of values matching a regular expression and path\n     * @param {RegExp} re\n     * @param {string} path\n     * @returns {string[]}\n     */\n    getValuesFromPath = (re, path) => (path.match(re) || []).slice(1)\n\n    /**\n     * converts (['a', 'b', 'c'], [1, 2, 3]) to {a: 1, b: 2, c: 3}\n     * @param {string[]} fields\n     * @param {string[]} values\n     * @returns\n     */\n    mapFieldsWithValues = (fields, values) =>\n        this.haveEqualLength(fields, values) &&\n        fields.reduce((map, field, index) => {\n            map[field] = values[index]\n            return map\n        }, {})\n\n    haveEqualLength = (fields, values) => {\n        if (fields.length !== values.length)\n            throw new Error(\n                'fields and values should be of same length' +\n                    `\\nfields: ${JSON.stringify(fields)}` +\n                    `\\nvalues: ${JSON.stringify(values)}`,\n            )\n        return true\n    }\n}\n", "import { UrlParamUtils } from '../runtime/Instance/UrlParamUtils.js'\nimport { RNode } from './RNode.js'\n\n/**\n * @template {typeof RNode<any>} NodeConstructor\n */\nexport class Routify {\n    /** @type {typeof RNode<any>} */\n    NodeConstructor\n\n    /** @type {NodeConstructor['prototype']} */\n    NodeType\n\n    /** @type {NodeConstructor['prototype'][]} */\n    nodeIndex = []\n\n    /** @type {Object<string, NodeConstructor['prototype']>} */\n    rootNodes = {}\n\n    utils = new UrlParamUtils()\n\n    /**\n     * @param {string=} name relative path for the node\n     * @param {any|string=} module svelte component\n     * @returns {this['NodeType']}\n     */\n    createNode(name, module) {\n        return new this.NodeConstructor(name, module, this)\n    }\n}\n", "import { RNodeRuntime } from './RNodeRuntime.js'\nimport { appInstance } from '../Global/Global.js'\nimport { Routify } from '../../common/Routify.js'\n\n/**\n * @extends {Routify<typeof RNodeRuntime>}\n */\nexport class RoutifyRuntime extends Routify {\n    NodeConstructor = RNodeRuntime\n    mode = 'runtime'\n\n    /**@type {Router[]} routers this instance belongs to */\n    routers = []\n\n    /** @type {Object<string, RNodeRuntime>} */\n    rootNodes = {}\n\n    constructor(options) {\n        super()\n\n        this.options = options\n        if (options.routes) {\n            this.rootNodes[options.routes.rootName || 'unnamed'] = this.createNode(\n                options.routes.rootName,\n            ).importTree(options.routes)\n        }\n        this.global = appInstance.register(this)\n        Object.defineProperty(this, 'routers', { enumerable: false })\n        this.log = this.global.log\n    }\n}\n", "/**\n * @template {function} CB\n * @param {CB} cb\n * @returns {CB}\n */\nexport const runOnce = (cb) => {\n  let hasRun;\n\n  /** @type {unknown} */\n  const wrapper = (...params) => {\n    if (hasRun) return;\n    hasRun = true;\n    return cb(...params);\n  };\n\n  return /** @type {CB} */ (wrapper);\n};\n", "/**\n * @template H\n * @callback AddHookToCollection\n * @param {H} hook\n * @returns {function} unhook\n **/\n\nimport { runOnce } from \"./util.mjs\";\n\n/**\n * @template H\n * @typedef {AddHookToCollection<H> & HooksCollectionProps<H>} HooksCollection\n */\n\n/**\n * @template H hook\n * @typedef {Object} HooksCollectionProps\n * @prop {H} run\n * @prop {H} runOnce\n * @prop {H[]} hooks\n */\n\n/**\n * @template  V\n * @callback Runner\n * @param {HookCb<V>[]} value\n * @param  {...any} rest\n */\n\n/**\n * @template T\n * @callback HookCb\n * @param {T} value\n * @param {...any} rest\n */\n\n/**\n * creates a hook collection\n * @template T\n * @param {Runner<T>} runner\n * @return {HooksCollection<HookCb<T>>}\n * @example\n * const hooksCollection = createHook()\n * const unhookFn = hooksCollection(x => console.log('hello', x))\n * const unhookFn2 = hooksCollection(x => console.log('goodbye', x))\n *\n * // call hooks\n * hooksCollection.hooks.forEach(hook => hook('Jake'))\n * // logs \"hello Jake\" and \"goodbye Jake\"\n *\n * // unregister\n * unhookFn()\n * unhookFn2()\n */\nconst createHooksCollection = (runner) => {\n  /** @type {HookCb<T>[]} */\n  const hooks = [];\n\n  /**\n   *@type {HooksCollection<HookCb<T>>}\n   */\n  const hooksCollection = (hook) => {\n    hooks.push(hook);\n    return () => hooks.splice(hooks.indexOf(hook), 1);\n  };\n\n  hooksCollection.hooks = hooks;\n  hooksCollection.run = runner(hooks);\n  hooksCollection.runOnce = runOnce(runner(hooks));\n\n  return hooksCollection;\n};\n\n/**\n * @template P\n * @typedef {HooksCollection<(pri: P, ...rest)=>P>} CollectionSync\n */\n/**\n * @template P\n * @typedef {HooksCollection<(pri: P, ...rest)=>P|Promise<P>>} CollectionAsync\n */\n/**\n * @template P\n * @typedef {HooksCollection<((pri: P, ...rest)=>void)>} CollectionSyncVoid\n */\n/**\n * @template P\n * @typedef {HooksCollection<(pri: P, ...rest)=>void|Promise<void>>} CollectionAsyncVoid\n */\n\n/**\n * @template T\n * @param {T=} type\n * @returns {HooksCollection<T>}\n */\nexport const createPipelineCollection = (type) =>\n  // @ts-ignore\n  createHooksCollection(\n    (hooks) =>\n      (value, ...rest) =>\n        hooks.reduce(\n          (pipedValue, hook) =>\n            pipedValue?.then ? pipedValue.then((r) => hook(r, ...rest)) : hook(pipedValue, ...rest),\n          value\n        )\n  );\n\n/**\n * @template T\n * @param {T=} type\n * @returns {CollectionSyncVoid<T>|CollectionAsyncVoid<T>}\n */\nexport const createSequenceHooksCollection = (type) =>\n  createHooksCollection(\n    (hooks) =>\n      (value, ...rest) =>\n        hooks.reduce(\n          (last, hook) => (last?.then ? last.then((_) => hook(value, ...rest)) : hook(value, ...rest)),\n          value\n        )\n  );\n\n/**\n * @template T\n * @param {T=} type\n * @returns {CollectionSyncVoid<T>|CollectionAsyncVoid<T>}\n */\nexport const createParallelHooksCollection = (type) =>\n  createHooksCollection(\n    (hooks) =>\n      (value, ...rest) =>\n        Promise.all(hooks.map((hook) => hook(value, ...rest))).then((r) => value)\n  );\n\n/**\n * @template T\n * @param {T=} type\n * @returns {CollectionSync<T>|CollectionAsync<T>}\n */\nexport const createGuardsCollection = (type) =>\n  // @ts-ignore\n  createHooksCollection(\n    (hooks) =>\n      (value, ...rest) =>\n        hooks.reduce(\n          (pipedValue, hook) =>\n            pipedValue?.then ? pipedValue.then((r) => r && hook(value, ...rest)) : pipedValue && hook(value, ...rest),\n          value || true\n        )\n  );\n", "import { createSequenceHooksCollection } from 'hookar'\nimport { get } from 'svelte/store'\nimport { urlFromAddress } from '../../utils/index.js'\nimport { BaseReflector } from './ReflectorBase.js'\n\nexport class AddressReflector extends BaseReflector {\n    /** @param {Router} router */\n    constructor(router) {\n        super(router)\n        const { instance, urlRewrites } = router\n        const { urlFromBrowser, browserAdapter } = instance.global\n\n        if (!history['onPushstate']) {\n            this.log.debug('polyfill history hooks') // ROUTIFY-DEV-ONLY\n            polyfillHistory()\n        }\n\n        /** @param {('push'|'replace')} method */\n        const createStateEventHandler = method => {\n            return function (data, title, url) {\n                const routerName = data?.routify?.router ?? false\n\n                if (routerName === false) url = browserAdapter.toRouter(url, router)\n                else if (routerName !== router.name) return false\n                for (const rewrite of urlRewrites)\n                    url = rewrite.toInternal(url, { router })\n                router.url[method](url)\n            }\n        }\n\n        this.absorb = () => router.url.replace(urlFromBrowser(router))\n        this._pushstateHandler = createStateEventHandler('push')\n        this._replacestateHandler = createStateEventHandler('replace')\n        this._popstateHandler = () => router.url.pop(urlFromBrowser(router))\n    }\n\n    install() {\n        this.hooks = [\n            history['onPushstate'](this._pushstateHandler),\n            history['onReplacestate'](this._replacestateHandler),\n            history['onPopstate'](this._popstateHandler),\n        ]\n\n        if (!get(this.router.activeRoute)) this.absorb()\n        else this.reflect()\n    }\n\n    uninstall() {\n        this.hooks.forEach(unreg => unreg())\n        setTimeout(() => this.reflect())\n    }\n\n    reflect = () => {\n        const { mode } = get(this.router.activeRoute)\n        if (mode === 'popState') return false\n        const { routers, browserAdapter } = this.router.instance.global\n\n        const addressRouters = routers.filter(\n            router => router.urlReflector instanceof this.constructor,\n        )\n\n        const url = browserAdapter.toBrowser(addressRouters)\n\n        // ROUTIFY-DEV-ONLY-START\n        this.log.debug('pushing internal url to browser history', {\n            mode,\n            url,\n            currentBrowserUrl: urlFromAddress(),\n            currentInternalUrl: this.router.url.internal(),\n        })\n        // ROUTIFY-DEV-ONLY-END\n\n        history[`${mode}Native`]({}, '', url)\n    }\n}\n\nfunction polyfillHistory() {\n    const hooks = {\n        /** @type {import('hookar').HooksCollection<History['pushState']>} */\n        onPushstate: createSequenceHooksCollection(),\n        /** @type {import('hookar').HooksCollection<History['replaceState']>} */\n        onReplacestate: createSequenceHooksCollection(),\n        onPopstate: createSequenceHooksCollection(),\n    }\n    Object.assign(history, hooks)\n\n    // backup native methods\n    const { pushState, replaceState } = history\n    history['pushStateNative'] = pushState\n    history['replaceStateNative'] = replaceState\n\n    history.pushState = hooks.onPushstate.run\n    history.replaceState = hooks.onReplacestate.run\n    window.addEventListener('popstate', hooks.onPopstate.run)\n\n    return true\n}\n", "import { BaseReflector } from './ReflectorBase.js'\n\n// todo should these extend a base class?\n\nexport class InternalReflector extends BaseReflector {}\n", "// todo should be unified with build plugin namedModule\n\nconst parseModuleName = str => {\n    const matches = str.match(/^(.+?)(\\+)?$/)\n    const [, name, prepend] = matches\n    return { name, prepend }\n}\n\nconst handlers = {\n    /**\n     * @param {Route} route\n     * @param {Boolean} bool\n     * @param {RouteFragment} fragment\n     */\n    boolean(route, bool, fragment) {\n        const index = fragment.index\n        return handlers.number(route, index, fragment)\n    },\n    /**\n     * @param {Route} route\n     * @param {Number} num\n     * @param {RouteFragment} fragment\n     */\n    number(route, num, fragment) {\n        const index = fragment.index\n        const start = index - num\n        route.allFragments.splice(start, num)\n    },\n    /**\n     * @param {Route} route\n     * @param {string} str\n     * @param {RouteFragment} fragment\n     */\n    string(route, str, fragment) {\n        const selfIndex = fragment.index\n        const precedingFragments = route.allFragments.slice(0, selfIndex + 1)\n        /** @type {RouteFragment} */\n        let nextFragment\n\n        const { name, prepend } = parseModuleName(str)\n        while (precedingFragments.length) {\n            nextFragment = precedingFragments.pop()\n            const matchingSiblingNode = nextFragment.node.children.find(\n                node => node.meta.moduleName === name,\n            )\n            if (matchingSiblingNode) {\n                if (!prepend) route.allFragments.splice(0, fragment.index)\n                route.allFragments.unshift(route.createFragment(matchingSiblingNode))\n                precedingFragments.splice(0)\n            }\n        }\n    },\n}\n\n/**\n *\n * @param {Route} route\n * @returns {(fragment: RouteFragment) => void}\n */\nconst handleFragment = route => fragment => {\n    const { reset } = fragment.node.meta\n    if (reset) handlers[typeof reset](route, reset, fragment)\n}\n\n/**\n * Removes parent modules from a node\n *  @returns {RoutifyRuntimePlugin}\n **/\nexport default () => {\n    return {\n        beforeUrlChange: ({ route }) => {\n            const fragments = [...route.allFragments]\n            fragments.forEach(handleFragment(route))\n            return true\n        },\n    }\n}\n", "/**\n * @template {{}} T\n * @template {{}} T2\n * @param {T} receiver\n * @param  {...T2} sources\n * @return {T&Partial<T2>} //partial because we're not guaranteed that types are preserved\n */\nexport function deepAssign(receiver, ...sources) {\n    for (const source of sources) {\n        if (Array.isArray(source)) {\n            // transform receiver to an array if the source is an array\n            // @ts-ignore\n            receiver = Array.isArray(receiver) ? receiver : []\n            // @ts-ignore\n            receiver.push(...source) // @ts-ignore\n        } else\n            for (const key of Reflect.ownKeys(source)) {\n                if ([source[key], receiver[key]].every(isObjectOrArray)) {\n                    receiver[key] = deepAssign(receiver[key], source[key])\n                } else receiver[key] = source[key]\n            }\n    }\n    return receiver\n}\n\nconst isObject = v =>\n    v &&\n    typeof v === 'object' &&\n    !['Array', 'Date', 'Regexp'].includes(v.constructor?.name)\n\nexport const isObjectOrArray = v => Array.isArray(v) || isObject(v)\n\n/**\n * checks for repeating patterns to prevent infinite loops\n */\nclass RepetitionChecker {\n    history = []\n    /**\n     * Pushes an entry to history. If the entry already exists, it checks\n     * if the history between previously added entry and current entry is a\n     * repetition. If so, it returns the repetition.\n     * @param {any} entry\n     * @returns {false|any[]}\n     */\n    pushAndCheck = entry => {\n        const { history } = this\n        const prevIndexCursor = history.lastIndexOf(entry) + 1\n        history.push(entry)\n        if (prevIndexCursor) {\n            const lastIndexCursor = history.length\n            const sliceLength = lastIndexCursor - prevIndexCursor\n            const slice1 = history.slice(prevIndexCursor - sliceLength, prevIndexCursor)\n            const slice2 = history.slice(prevIndexCursor)\n            if (JSON.stringify(slice1) === JSON.stringify(slice2)) return slice2\n        }\n        return false\n    }\n}\n\n/**\n * @param {RoutifyBuildtimePlugin[]} plugins\n * @returns {RoutifyBuildtimePlugin[]}\n */\nexport const normalizePlugins = plugins =>\n    // clone, flatten and normalize\n    plugins.flat().map(plugin => ({\n        ...plugin,\n        before: [].concat(plugin.before).filter(Boolean), //convert to, or keep as array\n        after: [].concat(plugin.after).filter(Boolean), //convert to, or keep as array\n    }))\n\n/**\n * @param {RoutifyBuildtimePlugin[]} plugins\n * @returns {RoutifyBuildtimePlugin[]}\n */\nexport function sortPlugins(plugins) {\n    const repetitionChecker = new RepetitionChecker()\n\n    const _sort = () => {\n        plugins.some((plugin1, index1) =>\n            plugins.some((plugin2, index2) => {\n                const plugin2ShouldPrecede =\n                    plugin1.after.includes(plugin2.name) ||\n                    plugin2.before.includes(plugin1.name)\n                const plugin2DoesPrecede = index2 < index1\n                if (plugin2ShouldPrecede && !plugin2DoesPrecede) {\n                    // move plugin2 to the index of plugin1\n                    plugins.splice(index2, 1) //remove\n                    plugins.splice(index1, 0, plugin2) //insert\n\n                    // make sure we're not stuck in a loop\n                    const loop = repetitionChecker.pushAndCheck(plugin2)\n                    if (loop)\n                        // todo create loopException\n                        throw new Error(\n                            'found infinite loop in plugins. Repeating pattern:\\n' +\n                                `${loop\n                                    .map(\n                                        p =>\n                                            `${p.name} (${['before', 'after']\n                                                .map(name => `${name}: ${p[name]}`)\n                                                .join('; ')} )`,\n                                    )\n                                    .join('\\n')\n                                    .replace(/before: ;/g, '')\n                                    .replace(/after:  /g, '')\n                                    .replace(/\\( \\)/g, '')}`,\n                        )\n                    _sort()\n                    return true\n                }\n            }),\n        )\n    }\n\n    _sort()\n\n    return plugins\n}\n\n/**\n * mock routes from an object\n * @template {RoutifyBuildtime|RoutifyRuntime} T\n * @param {T} instance\n * @param {Object.<string, any>} routes\n * @example\n * mockRoutes(instance, {\n *   module: {\n *     about: {},\n *     posts: { '[slug]': {} },\n *     admin: { crud: {}, users: {} },\n *   },\n * })\n */\nexport const mockRoutes = (instance, routes) => {\n    const rootNode = instance.createNode('module')\n    const queue = [{ parent: rootNode, children: routes.module }]\n\n    while (queue.length) {\n        const job = queue.shift()\n        Object.entries(job.children).forEach(([name, routes]) => {\n            const parent = job.parent.createChild(name, '')\n            parent.meta.name = name\n            if (name.startsWith('[')) parent.meta.dynamic = true\n            if (name.startsWith('[...')) parent.meta.dynamicSpread = true\n            queue.push({\n                /** @ts-ignore our mocked route is lacking a lot of properties */\n                parent,\n                children: routes,\n            })\n        })\n    }\n\n    return rootNode\n}\n\n/**\n * Adds props to a Svelte component\n * @example\n * const MyCompWithProps = addPropsToComp(MyComp, {msg: 'hello world'})\n * @template {typeof import('svelte/internal').SvelteComponentDev} Component\n * @param {Component} Comp\n * @param {Object<string, any>} props\n * @returns {Component}\n */\nexport const addPropsToComp = (Comp, props) => {\n    const ssrWrapper = (Comp, props) => ({\n        ...Comp,\n        $$render: (...params) => {\n            params[1] = { ...params[1], ...props }\n            return Comp.$$render(...params)\n        },\n    })\n\n    const domWrapper = (Comp, props) =>\n        function (options) {\n            return new Comp({ ...options, props: { ...options.props, ...props } })\n        }\n\n    const wrapper = Comp['$$render'] ? ssrWrapper : domWrapper\n\n    return wrapper(Comp, props)\n}\n\n// todo fix types below. Callback param is any, but should be V. Probably needs overloading\n\n/**\n * Returns store value on the next store update.\n * If wanted is specified, the value will only be returned once the value matches.\n * Wanted can be a callback.\n * @example\n * // returns the next value from clock\n * const hour = await next(clock)\n * @example\n * // resolves when clock is 5\n * await next(clock, 5)\n * @example\n * // resolves when clock is 5\n * const hour = await next(clock, val => val === 5)\n * @template {import('svelte/store').Readable<V>} T\n * @template V\n * @param {T} store\n * @param {((wanted: V)=>Boolean)|V=} wanted\n * @param {boolean=} strict use === matching instead of == for the wanted value\n * @returns {Promise<V>}\n */\nexport const next = (store, wanted, strict) =>\n    new Promise(resolve => {\n        let unsub\n        unsub = store.subscribe(value => {\n            // skip the first initial return\n            if (!unsub) return\n            if (\n                typeof wanted === 'undefined' ||\n                value === wanted ||\n                (value == wanted && !strict) ||\n                (typeof wanted === 'function' && /** @type {function} */ (wanted)(value))\n            ) {\n                resolve(value)\n                unsub\n            }\n        })\n    })\n\nconst createThrottle = () => {\n    const map = new Map()\n\n    const throttle = async fn => {\n        const fnStr = fn.toString()\n        map.set(fnStr, map.get(fnStr) || { isRunning: false, runAgain: false })\n        const s = map.get(fnStr)\n\n        if (s.isRunning) s.runAgain = true\n        else {\n            s.isRunning = true\n            await fn()\n            s.isRunning = false\n            if (s.runAgain) {\n                s.runAgain = false\n                await throttle(fn)\n            }\n        }\n    }\n    return throttle\n}\n\nexport const throttle = createThrottle()\n", "/**\n * @typedef { Object } RouterOptionsNormalizedOverlay\n * @prop { UrlRewrite[] } urlRewrite hook: transforms paths to and from router and browser\n * @prop { RouterInitCallback[] } beforeRouterInit hook: runs before each router initiation\n * @prop { RouterInitCallback[] } afterRouterInit hook: runs after each router initiation\n * @prop { BeforeUrlChangeCallback[] } beforeUrlChange hook: guard that runs before url changes\n * @prop { AfterUrlChangeCallback[] } afterUrlChange hook: runs after url has changed\n * @prop { TransformFragmentsCallback[] } transformFragments hook: transform route fragments after navigation\n * @prop { OnDestroyRouterCallback[] } onDestroy hook: runs before router is destroyed\n */\n\n/**\n * @typedef { RoutifyRuntimeOptions & RouterOptionsNormalizedOverlay } RouterOptionsNormalized\n */\n\n/**\n * merges options.plugin into options\n * @param {Partial<RoutifyRuntimeOptions>} options\n * @param {Partial<RouterOptionsNormalized>=} config\n */\nexport const normalizeRouterOptions = (options, config) => {\n    config = config || {\n        name: '',\n        beforeRouterInit: [],\n        afterRouterInit: [],\n        urlRewrite: [],\n        beforeUrlChange: [],\n        afterUrlChange: [],\n        transformFragments: [],\n        onDestroy: [],\n    }\n\n    // separate plugins and options\n    const { plugins, ...optionsOnly } = options\n\n    /** @type {Partial<RoutifyRuntimeOptions>[]} */\n    const optionsGroups = [...(plugins || []), optionsOnly]\n    optionsGroups.forEach(pluginOptions => {\n        pluginOptions.plugins?.forEach(plugin => normalizeRouterOptions(plugin, config))\n        delete pluginOptions.plugins\n\n        Object.entries(pluginOptions).forEach(([field, value]) => {\n            if (Array.isArray(config[field]))\n                config[field].push(...[value].flat().filter(Boolean))\n            else config[field] = value || config[field]\n        })\n    })\n    return config\n}\n", "/**\n * @typedef { Object } ParentCmpCtx\n * @prop { Route } route\n * @prop { RNodeRuntime } node\n * @prop { Object.<String|Number, String|Number> } localParams\n * @prop { Object.<String|Number, any> } options\n */\n\nimport { derived, get, writable } from 'svelte/store'\nimport { Route } from '../Route/Route.js'\nimport {\n    fromEntries,\n    urlFromAddress,\n    getContextMaybe,\n    getable,\n    identicalRoutes,\n} from '../utils/index.js'\nimport { BaseReflector } from './urlReflectors/ReflectorBase.js'\nimport { appInstance } from '../Global/Global.js'\nimport { RoutifyRuntime } from '../Instance/RoutifyRuntime.js'\nimport { AddressReflector } from './urlReflectors/Address.js'\nimport { InternalReflector } from './urlReflectors/Internal.js'\nimport {\n    createGuardsCollection,\n    createPipelineCollection,\n    createSequenceHooksCollection,\n} from 'hookar'\nimport reset from '../plugins/reset/index.js'\nimport { next } from '../../common/utils.js'\nimport { normalizeRouterOptions } from './utils/index.js'\n\n// todo move stripNullFields and normalizeRouterOptions to utils file.\nconst stripNullFields = obj =>\n    Object.fromEntries(Object.entries(obj).filter(([_, v]) => v != null))\n\nconst defaultPlugins = [reset()]\n\n/**\n * @implements { Readable<Router> }\n */\nexport class Router {\n    /** @type { RouteStore } */\n    pendingRoute = getable(null)\n    /** @type { RouteStore } */\n    activeRoute = getable(null)\n\n    _urlReflector = null\n\n    /** @type {UrlRewrite[]} */\n    urlRewrites = []\n\n    /** @type { import('hookar').HooksCollection<RouterInitCallback> } */\n    beforeRouterInit = createSequenceHooksCollection()\n    /** @type { import('hookar').HooksCollection<RouterInitCallback> } */\n    afterRouterInit = createSequenceHooksCollection()\n    /** @type { import('hookar').HooksCollection<BeforeUrlChangeCallback> } */\n    beforeUrlChange = createGuardsCollection()\n    /** @type { import('hookar').HooksCollection<AfterUrlChangeCallback> } */\n    afterUrlChange = createSequenceHooksCollection()\n    /** @type { import('hookar').HooksCollection<TransformFragmentsCallback> } */\n    transformFragments = createPipelineCollection()\n    /** @type { import('hookar').HooksCollection<OnDestroyRouterCallback> } */\n    onDestroy = createSequenceHooksCollection()\n\n    parentElem = null\n\n    /** @type {QueryHandler} */\n    queryHandler = {\n        parse: (search, route) => fromEntries(new URLSearchParams(search)),\n        stringify: (params, route) => {\n            const query = new URLSearchParams(params).toString()\n            return query ? `?${query}` : ''\n        },\n    }\n\n    /** @type {ClickHandler} */\n    clickHandler = {}\n\n    url = {\n        internal: () => this.url.getPending() || this.url.getActive(),\n        external: () => this.getExternalUrl(),\n        getActive: () => get(this.activeRoute)?.url,\n        getPending: () => get(this.pendingRoute)?.url,\n        toString: () => this.url.internal(),\n        set: this._setUrl.bind(this),\n        push: (url, state = {}) => this._setUrl(url, 'pushState', false, state),\n        replace: (url, state = {}) => this._setUrl(url, 'replaceState', false, state),\n        pop: (url, state = {}) => this._setUrl(url, 'popState', false, state),\n    }\n\n    /**\n     * function that resolves after the active route has changed\n     * @returns {Promise<Route>} */\n    ready = async () =>\n        (!this.pendingRoute.get() && this.activeRoute.get()) ||\n        next(this.activeRoute, x => !!x)\n\n    /** @type {Route[]} */\n    history = []\n\n    /**\n     * @param {Partial<RoutifyRuntimeOptions>} input\n     */\n    constructor(input) {\n        const { subscribe, set } = writable(this)\n        this.subscribe = subscribe\n        this.triggerStore = () => set(this)\n\n        const oldRouter = appInstance.routers.find(r => r.name == (input.name || ''))\n        if (oldRouter) return oldRouter\n        else {\n            input.plugins = [...(input.plugins || []), ...defaultPlugins].filter(Boolean)\n            this.init(input)\n            this.params = derived(this.activeRoute, $activeRoute => $activeRoute.params)\n            // we're using setTimeout to make sure outgoing routers have been destroyed\n            // this also prevents the first router from absorbing the url from the address and\n            // then reflecting only its internal url before other routers have absorbed the url\n            this.afterUrlChange(() => setTimeout(() => this._urlReflector.reflect()))\n            this.activeRoute.get = () => get(this.activeRoute)\n            this.pendingRoute.get = () => get(this.pendingRoute)\n        }\n    }\n\n    /**\n     * @param {Partial<RoutifyRuntimeOptions>} input\n     */\n    init(input) {\n        const firstInit = !this.options\n\n        // we need to strip undefine / null fields since they would overwrite existing options\n        input = stripNullFields(input)\n        /** @type {Partial<import('./utils').RouterOptionsNormalized>} */\n        this.options = normalizeRouterOptions({ ...this.options, ...input })\n\n        let {\n            instance,\n            rootNode,\n            name,\n            routes,\n            urlRewrite,\n            urlReflector,\n            url,\n            passthrough,\n            beforeUrlChange,\n            afterUrlChange,\n            transformFragments,\n            onDestroy,\n            beforeRouterInit,\n            afterRouterInit,\n            queryHandler,\n            clickHandler,\n        } = this.options\n\n        if (queryHandler) this.queryHandler = queryHandler\n        if (clickHandler) this.clickHandler = clickHandler\n\n        beforeUrlChange.forEach(this.beforeUrlChange)\n        transformFragments.forEach(this.transformFragments)\n        afterUrlChange.forEach(this.afterUrlChange)\n        onDestroy.forEach(this.onDestroy)\n        beforeRouterInit.forEach(this.beforeRouterInit)\n        afterRouterInit.forEach(this.afterRouterInit)\n\n        this.beforeRouterInit.run({ router: this, firstInit })\n\n        const parentCmpCtx = getContextMaybe('routify-fragment-context')\n\n        /** @type {RoutifyRuntime} */\n        this.instance =\n            instance ||\n            this.instance ||\n            parentCmpCtx?.route.router.instance ||\n            appInstance.instances[0] ||\n            new RoutifyRuntime({})\n\n        this.name = name\n        this.urlRewrites = urlRewrite\n\n        // ROUTIFY-DEV-ONLY-START\n        this.log =\n            this.log || this.instance.log.createChild(this.name || '[unnamed instance]')\n        // ROUTIFY-DEV-ONLY-END\n\n        if (passthrough && !(passthrough instanceof Router))\n            passthrough = parentCmpCtx?.route.router || passthrough\n\n        this.passthrough = passthrough || this.passthrough\n\n        // remove from old instance, in case the instance changed\n        appInstance.instances.forEach(inst => {\n            const index = inst.routers.indexOf(this)\n            if (index !== -1) inst.routers.splice(index, 1)\n        })\n        // add to current instance\n        this.instance.routers.push(this)\n\n        if (routes && !this.rootNode) this.importRoutes(routes)\n\n        this.parentCmpCtx = parentCmpCtx\n        /** @type {RNodeRuntime} */\n        this.rootNode = rootNode || this.rootNode || this.instance.rootNodes.default\n\n        this.log.debug('initiated router') // ROUTIFY-DEV-ONLY\n\n        if (this.url.getActive()) {\n            this.log.debug('router was created with activeUrl') // ROUTIFY-DEV-ONLY\n            this._setUrl(this.url.getActive(), 'pushState', true)\n        }\n\n        const shouldInstallUrlReflector =\n            !this.urlReflector ||\n            (urlReflector && !(this.urlReflector instanceof urlReflector))\n\n        if (shouldInstallUrlReflector) {\n            urlReflector =\n                urlReflector ||\n                (typeof window != 'undefined' ? AddressReflector : InternalReflector)\n            this.setUrlReflector(urlReflector)\n        }\n\n        if (url) this.url.replace(url)\n        this.triggerStore()\n        this.afterRouterInit.run({ router: this, firstInit })\n    }\n\n    /** @param {HTMLElement} elem */\n    setParentElem = elem => {\n        this.parentElem = elem\n    }\n\n    importRoutes(routes) {\n        this.rootNode = this.instance.createNode().importTree(routes)\n        this.instance.rootNodes[routes.rootName || 'unnamed'] = this.rootNode\n    }\n\n    /**\n     * converts a URL or Routify's internal URL to an external URL (for the browser)\n     * @param {string=} url\n     * @returns\n     */\n    getExternalUrl = url => {\n        const result = this.urlRewrites.reduce(\n            (_url, rewrite) => rewrite.toExternal(_url, { router: this }),\n            url || this.url.internal(),\n        )\n        return result\n    }\n\n    /**\n     * converts an external URL (from the browser) to an internal URL\n     * @param {string} url\n     * @returns\n     */\n    getInternalUrl = url =>\n        this.urlRewrites.reduce(\n            (_url, rewrite) => rewrite.toInternal(_url, { router: this }),\n            url,\n        )\n\n    /**\n     *\n     * @param {string} url\n     * @param {UrlState} mode pushState, replaceState or popState\n     * @param {boolean} [isInternal=false] if the URL is already internal, skip rewrite.toInternal\n     * @param {Object=} state a state to attach to the route\n     * @returns {Promise<true|false>}\n     */\n    async _setUrl(url, mode, isInternal, state = {}) {\n        if (!isInternal) url = this.getInternalUrl(url)\n\n        url = url || '/'\n        url = url.replace(/(.+)\\/+([#?]|$)/, '$1$2') // strip trailing slashes\n        const { activeRoute, pendingRoute } = this\n\n        // ROUTIFY-DEV-ONLY-START\n        const { debug, groupCollapsed, trace, groupEnd } = this.log\n        if (this.log.level >= 4) {\n            const info = {\n                url,\n                mode,\n                prev: this.url.internal(),\n                browserOld: urlFromAddress(),\n                state,\n            }\n            ;[groupCollapsed('set url', info), trace(), groupEnd()]\n        }\n        // ROUTIFY-DEV-ONLY-END\n\n        if (!url.startsWith('/')) url = url.replace(new URL(url).origin, '')\n\n        const route = new Route(this, url, mode, state)\n\n        const currentRoute = pendingRoute.get() || activeRoute.get()\n        if (identicalRoutes(currentRoute, route)) {\n            debug('current route is identical - skip', currentRoute, route) // ROUTIFY-DEV-ONLY\n            return true\n        }\n\n        route.log.debug('set pending route', route) // ROUTIFY-DEV-ONLY\n        pendingRoute.set(route)\n        await route.loadRoute()\n\n        return true\n    }\n\n    destroy() {\n        this.log.debug(`destroying router`) // ROUTIFY-DEV-ONLY\n        this.instance.routers = this.instance.routers.filter(router => router !== this)\n        this.onDestroy.run({ router: this })\n    }\n\n    /** @type {BaseReflector} */\n    get urlReflector() {\n        return this._urlReflector\n    }\n\n    /** @param {typeof BaseReflector} UrlReflector */\n    setUrlReflector(UrlReflector) {\n        this._urlReflector?.uninstall()\n        this._urlReflector = new UrlReflector(this)\n        this._urlReflector.install()\n        this.triggerStore()\n    }\n}\n\n/**\n * Creates a new router\n * @param  {Partial<RoutifyRuntimeOptions>} options\n */\nexport const createRouter = options => new Router(options)\n", null, null, null, null, "/**\n\n */\n\nimport { get } from 'svelte/store'\nimport { waitFor } from '../../utils'\n\n/**\n *\n * @param {RNodeRuntime} node\n */\nconst nodeIsPage = node =>\n    !node.meta.fallback && !node.name.startsWith('_') && node.meta?.order !== false\n\n/**\n * @param {RNodeRuntime} refNode\n * @param {RenderContext} parentContext\n */\nconst getChildren = (refNode, parentContext) => {\n    const parentNode = parentContext?.node || refNode.parent\n\n    const matches = parentNode\n        ? parentNode.children.filter(node => node === refNode || nodeIsPage(node))\n        : [refNode]\n\n    return matches.length ? matches : [refNode]\n}\n\n/**\n * @param {RNodeRuntime | string} nodeOrString\n */\nconst coerceStringToNode = (nodeOrString, refNode) =>\n    typeof nodeOrString === 'string' ? refNode.traverse(nodeOrString) : nodeOrString\n\n/**\n * @param {undefined|Boolean|MultiPageInput[]} pagesInput\n * @param {RNodeRuntime} refNode\n * @param {RenderContext} parentContext\n * @returns {RNodeRuntime[]}\n */\nconst coercePagesToNodes = (pagesInput, refNode, parentContext) => {\n    const pageInputs = Array.isArray(pagesInput)\n        ? pagesInput\n        : getChildren(refNode, parentContext)\n    return pageInputs.map(page => coerceStringToNode(page, refNode))\n}\n\n/**\n * @param {boolean|Array|Object} multiInput\n * @returns {Multi}\n */\nconst convertToObj = multiInput =>\n    multiInput instanceof Object\n        ? !Array.isArray(multiInput)\n            ? multiInput\n            : { pages: multiInput }\n        : {}\n\n/**\n * normalize multi object. If no pages are specified, use siblings of the refNode\n * @param {MultiInput} multiInput\n * @param {RNodeRuntime|null} refNode\n * @param {RenderContext} parentContext\n * @returns {Multi}\n */\nexport const normalizeMulti = (multiInput, refNode, parentContext) => {\n    const multi = convertToObj(multiInput)\n\n    multi.single = multi.single || !multiInput\n    multi.pages = coercePagesToNodes(multi.pages, refNode, parentContext)\n    multi.renderInactive = multi.renderInactive || 'browser'\n\n    return multi\n}\n", "const decoratorDefaults = { recursive: true, shouldRender: () => true }\n\n/**\n * @param {DecoratorInput} decorator\n * @returns {Decorator}\n */\nexport const normalizeDecorator = decorator => {\n    if ('component' in decorator) return { ...decoratorDefaults, ...decorator }\n    else return { ...decoratorDefaults, component: decorator }\n}\n\nexport * from './normalizeMulti.js'\n", null, "import { get } from 'svelte/store'\nimport { appInstance } from '../index.js'\nimport { waitFor } from '../utils/index.js'\n\n/**\n * @param {HTMLElement | ((elem: HTMLElement)=>HTMLElement)} _elem\n * @param {HTMLElement | ((elem: HTMLElement)=>HTMLElement)} [_boundary]\n * @param {ScrollIntoViewOptions} [options]\n * @param {number} [timeout]\n */\n// @ts-ignore\nexport const persistentScopedScrollIntoView = (_elem, _boundary, options, timeout) => {\n    let elem = resolveIfAnonFn(_elem, [_boundary])\n    const boundary = resolveIfAnonFn(_boundary, [elem])\n\n    options = options || {}\n    options.behavior = 'auto'\n    scopedScrollIntoView(elem, boundary)\n    const observer = new MutationObserver(mo => {\n        // console.log('DOM changed. Update scroll position')\n        if (mo.length > 1 || mo[0].addedNodes.length || mo[0].removedNodes.length) {\n            scopedScrollIntoView(elem, boundary)\n        }\n    })\n    observer.observe(document.body, {\n        childList: true,\n        subtree: true,\n        attributes: true,\n        characterData: true,\n    })\n    const stopScroll = () => observer.disconnect()\n\n    if (timeout) {\n        return new Promise(resolve =>\n            setTimeout(() => {\n                stopScroll()\n                resolve()\n            }, timeout),\n        )\n    } else {\n        timeout\n        return stopScroll\n    }\n}\n\n/**\n * returns all the elements that should scrolling shouldn't propagate past, ie. routify-scroll=lock and router parent elements\n * @returns  {HTMLElement[]}\n */\nexport const getScrollBoundaries = () => [\n    ...document.querySelectorAll('[data-routify-scroll=\"lock\"]'),\n    ...appInstance.routers\n        .filter(router => router.parentCmpCtx)\n        .map(router => router.parentElem),\n]\n\n/** @param {HTMLElement} elem */\nconst getMulti = elem => {\n    if (!elem) return false\n    if (elem['__routify_meta']?.router) return false\n    if (elem['__routify_meta']?.renderContext?.anchor?.single)\n        return !get(elem['__routify_meta']?.renderContext?.anchor?.single)\n    if (elem['__routify_meta']?.renderContext?.parent?.single)\n        return !get(elem['__routify_meta']?.renderContext?.parent?.single)\n    else return getMulti(elem.parentElement)\n}\n\n/**\n * Resolves the given `subject` as a function if it is anonymous, otherwise returns the subject as is\n * @template T\n * @template P\n * @param {T | ((...P)=>T) | ((...P)=>Promise<T>) } subject The subject to be resolved.\n * @param {P[]=} params An optional array of parameters to pass to the anonymous function.\n * @returns {T}\n */\nexport const resolveIfAnonFn = (subject, params) => {\n    const isAnonFn = typeof subject === 'function' && !subject['prototype']\n    return isAnonFn ? /** @type {any} */ (subject)(...params) : subject\n}\n\n/**\n *\n * @param {HTMLElement | ((elem: HTMLElement)=>HTMLElement)} _elem\n * @param {scrollBoundary} _boundary\n */\nexport const scopedScrollIntoView = async (_elem, _boundary) => {\n    let elem = await resolveIfAnonFn(_elem, [_boundary])\n    const boundary = await resolveIfAnonFn(_boundary, [elem])\n    // /** @type {any[]} */\n    // const logs = [['[scroll] elem', elem, 'boundary', boundary]]\n\n    let parent = elem.parentElement\n    while (\n        parent?.scrollTo &&\n        parent.dataset['routifyScroll'] !== 'lock' &&\n        parent !== boundary?.parentElement\n    ) {\n        const scrollToPos = getMulti(elem) || elem['routify-hash-nav']\n        if (!scrollToPos) {\n            parent.scrollTo(0, 0)\n            // logs.push([' |', { parent: parent, child: _elem, top: true }])\n        } else {\n            const targetRect = elem.getBoundingClientRect()\n            const parentRect = parent.getBoundingClientRect()\n\n            // if parent is HTML, scroll and top is the same and we get double effect\n            const scrollTop = parent.parentElement ? parent.scrollTop : 0\n            const scrollLeft = parent.parentElement ? parent.scrollLeft : 0\n            // const top = targetRect.top - parentRect.top\n            // logs.push(['parent scrolltop ', parent.scrollTop])\n            const top = scrollTop + targetRect.top - parentRect.top\n            // const left = targetRect.left - parentRect.left\n            const left = scrollLeft + targetRect.left - parentRect.left\n            // logs.push([\n            //     ' | ',\n            //     {\n            //         parent: parent,\n            //         child: _elem,\n            //         top,\n            //         left,\n            //         scrollTop: parent.scrollTop,\n            //         targetTop: targetRect.top,\n            //         parentTop: parentRect.top,\n            //     },\n            // ])\n            parent.scrollTo({ top, left })\n        }\n\n        /**\n         * If this is a not a multi page, we want to scroll it into view in its parent element.\n         * If this is a multi page, we want want to scroll it into view of the nearest non multi ancestor element.\n         */\n        if (!scrollToPos) elem = parent\n\n        parent = parent.parentElement\n    }\n\n    // logs.forEach(entry => console.log(...entry))\n}\n\n/**\n *\n * @param {RenderContext} context\n */\nexport const scrollToContext = async context => {\n    const { anchor, parent } = await waitFor(context.elem, Boolean)\n    const scrollTarget = anchor || parent\n\n    let scrollBoundary = await context.scrollBoundary\n\n    scopedScrollIntoView(scrollTarget, scrollBoundary)\n}\n", null, null, "import { BaseReflector } from './ReflectorBase.js'\n\nexport class LocalStorageReflector extends BaseReflector {\n    /** @param {Router} router */\n    constructor(router) {\n        super(router)\n        this.storageName = `__routify-router-${this.router.name}`\n    }\n    reflect() {\n        window.localStorage.setItem(this.storageName, this.router.url.internal())\n    }\n}\n", "import { derived } from 'svelte/store'\nimport { pathAndParamsToUrl, contexts, populateUrl } from '../utils/index.js'\nimport { get } from 'svelte/store'\nexport * from './scroll.js'\n\n/**\n * gets most recent common ancestor\n * @param {RNodeRuntime} node1\n * @param {RNodeRuntime} node2\n */\nexport const getMRCA = (node1, node2) => {\n    const lineage1 = [node1, ...node1.ancestors]\n    const lineage2 = [node2, ...node2.ancestors]\n    return lineage1.find(node => lineage2.includes(node))\n}\n\nexport const getPath = (node1, node2) => {\n    const lineage1 = [node1, ...node1.ancestors]\n    const lineage2 = [node2, ...node2.ancestors]\n    const mrca = getMRCA(node1, node2)\n    const backtrackSteps = lineage1.indexOf(mrca)\n    const backtrackStr = backtrackSteps ? '../'.repeat(backtrackSteps) : ''\n    const forwardSteps = lineage2.indexOf(mrca)\n    const forwardStepsStr = lineage2\n        .slice(0, forwardSteps)\n        .reverse()\n        .map(n => n.name)\n        .join('/')\n    return backtrackStr + forwardStepsStr\n}\n\n/**\n * @callback Goto\n * @param {string} path relative, absolute or named URL\n * @param {Object.<string, string>=} userParams\n * @param {{\n *  mode: 'push'|'replace'\n * }=} options\n * @type {Readable<Goto>} */\nexport const goto = {\n    subscribe: (run, invalidate) => {\n        const { router } = contexts\n        return derived(url, $url => (path, userParams, options) => {\n            const defaults = { mode: 'push' }\n            options = { ...defaults, ...options }\n            const newUrl = $url(path, userParams)\n            router.url[options.mode](newUrl)\n        }).subscribe(run, invalidate)\n    },\n}\n\n/**\n * @template T\n * @typedef {import('svelte/store').Readable<T>} Readable\n */\n\n/**\n * @typedef {Object} IsActiveOptions\n * @prop {Boolean} [recursive=true] return true if descendant is active\n */\n\n/**\n * @callback Url\n * @param {string} inputPath\n * @param {Object.<string, string>=} userParams\n * @returns {string}\n *\n * @type {Readable<Url>}\n **/\nexport const url = {\n    subscribe: (run, invalidate) => {\n        const { router } = contexts\n        const originalOriginNode = contexts.fragment.node\n        return derived(router.activeRoute, activeRoute => {\n            // in case we swapped the routes tree (rootNode), make sure we find\n            // the node that corresponds with the previous origin\n            // otherwise mrca will break as there's no shared ancestor\n            const originNode = router.rootNode.traverse(originalOriginNode.path)\n            return (inputPath, userParams = {}) => {\n                // we want absolute urls to be relative to the nearest router. Ironic huh\n                const offset = inputPath.startsWith('/') ? router.rootNode.path : ''\n                const targetNode = originNode.traverse(offset + inputPath)\n                if (!targetNode) {\n                    console.error('could not find destination node', inputPath)\n                    return\n                }\n                const mrca = getMRCA(targetNode, router.rootNode)\n                const path = ('/' + getPath(mrca, targetNode)).replace(/\\/index$/, '/')\n\n                const params = {\n                    ...inheritedParams(targetNode, activeRoute),\n                    ...userParams,\n                }\n\n                const internalUrl = populateUrl(path, params, activeRoute)\n                return router.getExternalUrl(internalUrl)\n            }\n        }).subscribe(run, invalidate)\n    },\n}\n\n/**\n *\n * @param {RNodeRuntime} node\n * @param {Route} route\n */\nconst inheritedParams = (node, route) => {\n    const lineage = [node, ...node.ancestors].reverse()\n    const params = lineage.map(\n        _node =>\n            route.allFragments.find(\n                // compare both path and node\n                // node could have moved /shop/[product], eg: to /en/shop/[product]\n                // but could also have been replaced by a different, but matching node\n                // if the route tree changed, eg: /en/shop/[product] /da/shop/[product]\n                fragment => fragment.node === _node || fragment.node.path === _node.path,\n            )?.params,\n    )\n    return Object.assign({}, ...params)\n}\n\n/**\n * @type {Readable<Object.<string, any>>}\n */\nexport const params = {\n    subscribe: (run, invalidate) =>\n        derived(contexts.router.params, params => params).subscribe(run, invalidate),\n}\n\n/**\n * @callback IsActive\n * @param {String=} path\n * @param {Object.<string,string>} [params]\n * @param {IsActiveOptions} [options]\n * @returns {Boolean}\n *\n * @type {Readable<IsActive>} */\nexport const isActive = {\n    subscribe: (run, invalidate) =>\n        derived(contexts.router.activeRoute, isActiveRoute).subscribe(run, invalidate),\n}\n\n/**\n * @param {Route} $route\n */\nexport const isActiveRoute = $route => isActiveUrl($route.url, $route.params)\n\nexport const isActiveUrl = (url, actualParams = {}) => {\n    const stripLastIndexAndSlash = str => str.replace(/(\\/index)?\\/*$/, '')\n\n    // strip search and hash\n    url = url.replace(/[?#].+/, '')\n    url = stripLastIndexAndSlash(url)\n\n    /** @type {IsActive} */\n    return (path, params = {}, options = {}) => {\n        const { recursive } = { recursive: true, ...options }\n\n        // return false if wanted params aren't satisfied\n        for (const wantedParam of Object.keys(params))\n            if (actualParams[wantedParam] !== params[wantedParam]) return false\n\n        path = pathAndParamsToUrl(path, { ...actualParams, ...params }, x => '', true)\n        // if path ends in /index, make /index optional. The browser URL might say /foo and not /foo/index\n        path = stripLastIndexAndSlash(path)\n        const suffix = recursive ? '(/|$)' : '/?$'\n\n        const regexPath = new RegExp(`^${path}${suffix}`)\n        return regexPath.test(url)\n    }\n}\n/**\n * @param {string} path\n */\nexport const resolveNode = path => {\n    const { node } = contexts.fragment\n    const { router } = contexts\n    return traverseNode(node, path, router)\n}\n\n/**\n *\n * @param {RNodeRuntime} node\n * @param {string} path\n * @param {Router} router\n * @returns {RNodeRuntime}\n */\nexport const traverseNode = (node, path, router) =>\n    path.startsWith('/') ? router.rootNode.traverse(`.${path}`) : node.traverse(path)\n\n/**\n * @template {Function} T\n * @template U\n * @param {T} callback\n * @returns {Readable<T extends () => infer U ? U : any>}\n */\nconst pseudoStore = callback => ({\n    subscribe: run => {\n        run(callback())\n        return () => {}\n    },\n})\n\nexport const context = pseudoStore(() => contexts.fragment)\n\nexport const node = pseudoStore(() => get(context).node)\n\nexport const meta = pseudoStore(() => get(node).meta)\n\n/** @type {Readable<Route>} */\nexport const activeRoute = {\n    subscribe: run => contexts.router.activeRoute.subscribe(run),\n}\n\n/** @type {Readable<Route>} */\nexport const pendingRoute = {\n    subscribe: run => contexts.router.pendingRoute.subscribe(run),\n}\n\n/**@type {Readable<function(AfterUrlChangeCallback):any>} */\nexport const afterUrlChange = {\n    subscribe: run => {\n        const hookHandles = []\n        /**\n         * @param {AfterUrlChangeCallback} callback\n         */\n        const register = callback => {\n            const unhook = contexts.router.afterUrlChange(callback)\n            hookHandles.push(unhook)\n            return unhook\n        }\n        run(register)\n        return () => hookHandles.map(unhook => unhook())\n    },\n}\n\n/**@type {Readable<function(BeforeUrlChangeCallback):any>} */\nexport const beforeUrlChange = {\n    subscribe: run => {\n        const hookHandles = []\n        /**\n         * @param {BeforeUrlChangeCallback} callback\n         */\n        const register = callback => {\n            const unhook = contexts.router.beforeUrlChange(callback)\n            hookHandles.push(unhook)\n            return unhook\n        }\n        run(register)\n        return () => hookHandles.map(unhook => unhook())\n    },\n}\n", "/**\n * like assign, but without overwrite. First prop wins.\n * @param {object} target\n * @param  {...any} sources\n */\nconst gentleAssign = (target, ...sources) => {\n    sources.forEach(source =>\n        Object.keys(source).forEach(key => (target[key] = target[key] ?? source[key])),\n    )\n    return target\n}\n\n/**\n * deep assign node trees, will only overwrite undefined values\n * also merges meta\n * @param {RNodeRuntime} target eg. de\n * @param {...RNodeRuntime} sources eg. en\n * @returns {RNodeRuntime}\n */\nexport const assignNode = (target, ...sources) => {\n    // assign nodes\n    gentleAssign(target, ...sources)\n\n    // assign meta\n    gentleAssign(target.meta, ...sources.map(s => s.meta))\n\n    sources.forEach(source => {\n        source.children.forEach(sNode => {\n            let tNode = target.children.find(tNode => tNode.name === sNode.name)\n            if (!tNode) tNode = target.createChild(null, null)\n            assignNode(tNode, sNode)\n        })\n    })\n    return target\n}\n\n/**\n *\n * @param {RNodeRuntime} node\n * @param {function(RNodeRuntime['parent']):any} callback\n * @returns {RNodeRuntime['parent']|undefined}\n */\nexport const findNearestParent = (node, callback) => {\n    let parent = /** @type {RNodeRuntime} */ node.parent\n    while (parent) {\n        if (callback(parent)) return parent\n        parent = parent.parent\n    }\n}\n\n/**\n * gets the ancestry distance between two nodes. Eg.:\n * the distance between the nodes /foo and /foo/bar/baz is 2\n * @param {RNodeRuntime} parentNode\n * @param {RNodeRuntime} childNode\n * @returns {number|undefined}\n */\nexport const getDistance = (parentNode, childNode) => {\n    let child = null\n    let distance = 0\n\n    while ((child = childNode.parent)) {\n        distance++\n        if (parentNode === childNode) return distance\n    }\n}\n", "// @ts-ignore\nimport Router from './Router/Router.svelte'\nimport { createRouter, Router as RouterClass } from './Router/Router.js'\nimport { RoutifyRuntime } from './Instance/RoutifyRuntime.js'\n\nimport { appInstance } from './Global/Global.js'\nimport { AddressReflector } from './Router/urlReflectors/Address.js'\nimport { LocalStorageReflector } from './Router/urlReflectors/LocalStorage.js'\nimport { InternalReflector } from './Router/urlReflectors/Internal.js'\nimport Component from './renderer/ComposeFragments.svelte'\n\nexport const Routify = RoutifyRuntime\n\nexport {\n    createRouter,\n    Router,\n    RouterClass,\n    appInstance,\n    AddressReflector,\n    LocalStorageReflector,\n    InternalReflector,\n    Component,\n}\n\nexport * from './helpers/index.js'\nexport * from '../common/helpers.js'\n"],
  "mappings": "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",
  "names": ["node", "params", "url", "node", "params", "noop", "log", "params", "url", "instance", "url", "params", "instance", "node", "meta", "ctx", "node", "context", "instance", "node", "children", "params", "url", "instance", "node", "throttle", "params", "url", "subscribe", "instance", "beforeUrlChange", "afterUrlChange", "onDestroy", "activeRoute", "pendingRoute", "ctx", "context", "context", "ctx", "location", "onMount", "elem", "next", "ctx", "create_if_block_1", "_a", "context", "params", "node", "ctx", "create_if_block", "context", "isActive", "node", "folderDecorator", "options", "_a", "childFragments", "childContexts", "resolveIfAnonFn", "params", "isAnonFn", "context", "context", "isActive", "ctx", "create_if_block", "instance", "url", "beforeUrlChange", "afterUrlChange", "onDestroy", "context", "activeRoute", "node", "defaults", "activeRoute", "params", "url", "tNode", "node", "Routify"]
}
